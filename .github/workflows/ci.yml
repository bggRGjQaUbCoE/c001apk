name: CI

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - '**.txt'
      - '.github/**'
      - '.idea/**'
      - '!.github/workflows/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout 
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Set Up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: gradle

      - name: Decode and Write Signing Key
        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
        run: |
          if [ ! -z "${{ secrets.SIGN_KEYSTORE_BASE64 }}" ]; then
            echo "${{ secrets.SIGN_KEYSTORE_BASE64 }}" | base64 --decode > key.jks
            echo "KEYSTORE_PATH=${{ github.workspace }}/key.jks" >> $GITHUB_ENV
            echo "KEYSTORE_PASSWORD=${{ secrets.KEYSTORE_PASSWORD }}" >> $GITHUB_ENV
            echo "KEY_ALIAS=${{ secrets.KEY_ALIAS }}" >> $GITHUB_ENV
            echo "KEY_PASSWORD=${{ secrets.KEY_PASSWORD }}" >> $GITHUB_ENV
          fi

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4.0.0
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-deps-${{ hashFiles('**/*.gradle*', '**/libs.versions.toml') }}
          restore-keys: gradle-${{ runner.os }}-deps-

      - name: Grant Permission for Gradlew
        run: chmod +x gradlew

      - name: Build and Upload Artifacts
        run: |
          ./gradlew :app:assembleRelease
          ./gradlew :app:assembleDebug
        env:
          GRADLE_OPTS: "-Dorg.gradle.daemon=false"

      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Upload Release Mappings
        uses: actions/upload-artifact@v4
        with:
          name: release-mappings
          path: app/build/outputs/mapping/release
          
      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/*.apk
